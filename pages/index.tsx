import {
  Box,
  Card,
  CardBody,
  Center,
  HStack,
  Heading,
  Image,
  Input,
  SimpleGrid,
  Stack,
  Text,
  VStack,
} from "@chakra-ui/react";
import { useQuery } from "@tanstack/react-query";
import Head from "next/head";
import { useDebounce } from "use-debounce";
import { useForm } from "react-hook-form";
import axios from "axios";
import { stripHtml } from "string-strip-html";

interface Show {
  show: {
    id: number;
    name: string;
    genres: string[];
    language: string;
    image: {
      medium: string;
    };
    summary: string;
    network: {
      name: string;
      country: {
        code: string;
      };
    };
    premiered: string;
    ended: string;
  };
}

interface FormData {
  searchTerm: string;
}

function getFlagEmoji(countryCode: string) {
  const codePoints = countryCode
    .toUpperCase()
    .split("")
    .map((char) => 127397 + char.charCodeAt(0));
  return String.fromCodePoint(...codePoints);
}

export default function Home() {
  const {
    register,
    watch,
    formState: {},
  } = useForm<FormData>();
  const [searchTerm] = useDebounce(watch("searchTerm"), 500);
  const query = useQuery({
    queryKey: ["search", searchTerm],
    queryFn: async () => {
      const res = await axios.get<Show[]>(
        `https://api.tvmaze.com/search/shows?q=${searchTerm}`
      );
      return res.data;
    },
    enabled: !!searchTerm,
  });

  return (
    <>
      <Head>
        <title>TVMaze Explorer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Center mt={5} mb={7} width={"100%"}>
          <VStack width={"100%"} px={5} spacing={5}>
            <Heading>TVMaze Explorer</Heading>
            <Input placeholder="Search..." {...register("searchTerm", {})} />
            <SimpleGrid spacing={4} width={"100%"}>
              {query.data?.map((v) => {
                return (
                  <Card overflow={"hidden"} direction={"row"} key={v.show.id}>
                    <Image
                      alt={`Poster for ${v.show.name}`}
                      src={
                        v.show.image?.medium ??
                        "https://via.placeholder.com/210x295"
                      }
                    />
                    <Stack>
                      <CardBody>
                        <Heading size={"md"}>{v.show.name}</Heading>
                        <Stack>
                          <Text pt={2}>
                            {
                              stripHtml(
                                v.show.summary ?? "No description provided"
                              ).result
                            }
                          </Text>
                          <HStack>
                            {v.show.network?.name && (
                              <Text
                                color={"gray.600"}
                                fontStyle={"italic"}
                                fontWeight={600}
                                fontSize={"sm"}
                              >
                                {v.show.network.name}
                              </Text>
                            )}
                            <Text fontSize={"sm"}>
                              {v.show.premiered?.substring(0, 4)} -{" "}
                              {v.show.ended?.substring(0, 4)}
                            </Text>
                            {v.show.network?.country?.code && (
                              <Text>
                                {getFlagEmoji(v.show.network.country.code)}
                              </Text>
                            )}
                          </HStack>
                        </Stack>
                      </CardBody>
                    </Stack>
                  </Card>
                );
              })}
            </SimpleGrid>
          </VStack>
        </Center>
      </main>
    </>
  );
}
